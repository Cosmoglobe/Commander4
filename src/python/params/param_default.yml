MPI_config:  # Specifying how many MPI tasks to allocate to different workloads. Sum needs to match total number of tasks allocated to MPI.
  ntask_tod: 11  # TOD sampling, which only relies on MPI, not OpenMP, and this can therefore be set as high as desired.
  ntask_compsep: 5  # Component Separation (currently only =1 supported), where each MPI tasks should correspond to 1 node, and threads are used for efficient SHTs.
nthreads_compsep: 32  # Threads dedicated to performing individual SHTs for each ntask_compsep. Set to total number of avaible cores on each node performing CompSep.
betzy_mode: false  # Turn on if running on Betzy and you understand the Commander 4 oversampling implementation.

CG_max_iter: 200
CG_err_tol: 0.000001  # CG error tolerance 1e-6, should be decreased for "proper" runs.

niter_gibbs: 4  # number of Gibbs iterations to perform.

nside: 256

# samp_freq: 6.0  # At the moment sample frequency is share for all bands.

# Initialization parameters, for the first iteration.
noise_fknee: 0.75
noise_alpha: -1.6
initial_g0: 81.5153

make_plots: True
output_stats: True

galactic_mask: True  # Applies a mask to the galactic plane when calculating sigma0
sample_corr_noise: False  # Whether to sample and subtract correlated noise during TOD processing.
pixel_compsep_sampling: False  # Pixel-by-pixel component separation, as opposed to global (which will take beam into account).

output_paths:
  plots: "../commander4_plots/"
  stats: "../commander4_stats/"

logging:
  console:
    level: 'info'
  file:
    level: 'info'
    filename: 'output.log'

components:
  CMB:
    component_class: "CMB"  # Needs to match class name in the models.component module.
    enabled: true  # Turn on or off.
    params:
      longname: "CMB"  # Used for titles etc.
      shortname: "cmb"  # Used for filenames etc.
      lmax: "full"  # Maximum multipole to use for the CMB component.
      smoothing_scale: 50  # [arcmin] Smoothing scale for plotting and final output (doens't affect the component separation).

  ThermalDust:
    component_class: "ThermalDust"
    enabled: true
    params:
      longname: "Thermal Dust"
      shortname: "dust"
      beta: 1.54
      T: 20
      nu0: 857
      lmax: "full"
      smoothing_scale: 50

  Synchrotron:
    component_class: "Synchrotron"
    enabled: true
    params:
      longname: "Synchrotron"
      shortname: "sync"
      beta: -3.1
      nu0: 23
      lmax: "full"
      smoothing_scale: 300

compsep:
  dense_matrix_debug_mode: false  # Solve system first with dense matrix math, for debugging CG. Very slow for nside>32.
  preconditioner: JointPreconditioner #NoiseOnlyPreconditioner #FullPreconditioner #MixingMatrixPreconditioner #BeamOnlyPreconditione #NoPreconditioner


CompSep_bands:
  Planck30GHz:
    enabled: true
    get_from: "PlanckLFI"  # Specifies that this band should be received from the TOD processing.
  Planck100GHz:
    enabled: true
    get_from: "PlanckHFI"
  Planck353GHz:
    enabled: true
    get_from: "PlanckHFI"
  Planck545GHz:
    enabled: true
    get_from: "PlanckHFI"
  Planck857GHz:
    enabled: true
    get_from: "PlanckHFI"

  # If you instead want to read maps from file, replace with something like the following:
  # Planck30GHz:
  #   enabled: true
  #   get_from: "file"
  #   path_signal_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/true_sky_full_16_30.fits"
  #   path_rms_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/rms_map_16_30.fits"
  #   fwhm: # [arcmin]
  #   freq: # [GHz]
  # Planck100GHz:
  #   enabled: true
  #   get_from: "file"
  #   path_signal_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/true_sky_full_16_100.fits"
  #   path_rms_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/rms_map_16_100.fits"
  #   fwhm: # [arcmin]
  #   freq: # [GHz]


experiments:
  PlanckLFI:
    enabled: true
    MPI_ranks: 1
    data_type: "TOD"
    data_path: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside1024_beam32_noise0.3_solardipole/tod_sim_1024_s0.3_b32.h5"
    num_scans: 20936
    bands:
      Planck30GHz:
        enabled: true
        fwhm: 32 # [arcmin]
        freq: 30 # [GHz]
        nside: 128

  PlanckHFI:
    enabled: true
    MPI_ranks: 4
    data_type: "TOD"
    data_path: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside1024_beam32_noise0.3_solardipole/tod_sim_1024_s0.3_b32.h5"
    num_scans: 20936
    bands:
      Planck100GHz:
        enabled: true
        fwhm: 9.6 # [arcmin]
        freq: 100 # [GHz]
        nside: 128
      Planck353GHz:
        enabled: true
        fwhm: 4.8 # [arcmin]
        freq: 353 # [GHz]
        nside: 256
      Planck545GHz:
        enabled: true
        fwhm: 4.7 # [arcmin]
        freq: 545 # [GHz]
        nside: 256
      Planck857GHz:
        enabled: true
        fwhm: 4.3 # [arcmin]
        freq: 857 # [GHz]
        nside: 256
