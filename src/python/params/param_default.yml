MPI_config:  # Specifying how many MPI tasks to allocate to different workloads. Sum needs to match total number of tasks allocated to MPI.
  ntask_tod: 11  # TOD sampling, which only relies on MPI, not OpenMP, and this can therefore be set as high as desired.
  ntask_compsep: 2  # Component Separation (currently only =1 supported), where each MPI tasks should correspond to 1 node, and threads are used for efficient SHTs.
  ntask_cmb: 0  # Set to 0 to not perform additional CMB realizations per Gibbs iteration, beyond the one performed during CompSep.
  use_MPI_for_CMB: True
nthreads_compsep: 32  # Threads dedicated to performing individual SHTs for each ntask_compsep. Set to total number of avaible cores on each node performing CompSep.
betzy_mode: false  # Turn on if running on Betzy and you understand the Commander 4 oversampling implementation.

CG_max_iter: 100
CG_err_tol: 0.00000001

niter_gibbs: 1

nside: 16

make_plots: True
output_stats: True

galactic_mask: True  # Applies a mask to the galactic plane when calculating sigma0
sample_corr_noise: False  # Whether to sample and subtract correlated noise during TOD processing.
pixel_compsep_sampling: False  # Pixel-by-pixel component separation, as opposed to global (which will take beam into account).

output_paths:
  plots: "../../plots/"
  stats: "../../stats/"

logging:
  console:
    level: 'info'
  file:
    level: 'info'
    filename: '../../logs/output.log'

components:
  CMB:
    component_class: "CMB"  # Needs to match class name in the models.component module.
    enabled: true  # Turn on or off.
    params:
      longname: "CMB"  # Used for titles etc.
      shortname: "cmb"  # Used for filenames etc.
      lmax: "full"  # Maximum multipole to use for the CMB component.
      smoothing_scale: 50  # Smoothing scale for plotting and final output (doens't affect the component separation).

  ThermalDust:
    component_class: "ThermalDust"
    enabled: true
    params:
      longname: "Thermal Dust"
      shortname: "dust"
      beta: 1.54
      T: 20
      nu0: 857
      lmax: "full"
      smoothing_scale: 50

  Synchrotron:
    component_class: "Synchrotron"
    enabled: true
    params:
      longname: "Synchrotron"
      shortname: "sync"
      beta: -3.1
      nu0: 23
      lmax: "full"
      smoothing_scale: 300

compsep:
  dense_matrix_debug_mode: false  # Solve system first with dense matrix math, for debugging CG. Very slow for nside>32.
  preconditioner: BeamOnlyPreconditioner


CompSep_bands:
  Planck30GHz:
    enabled: true
    get_from: "PlanckLFI"
  Planck100GHz:
    enabled: true
    get_from: "PlanckHFI"
  # If you instead want to read maps from file, replace with something like the following:
  # Planck30GHz:
  #   enabled: true
  #   get_from: "file"
  #   path_signal_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/true_sky_full_16_30.fits"
  #   path_rms_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/rms_map_16_30.fits"
  #   fwhm: # [arcmin]
  #   freq: # [GHz]
  # Planck100GHz:
  #   enabled: true
  #   get_from: "file"
  #   path_signal_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/true_sky_full_16_100.fits"
  #   path_rms_map: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam0_noise0.0/rms_map_16_100.fits"
  #   fwhm: # [arcmin]
  #   freq: # [GHz]


  experiments:
  PlanckLFI:
    enabled: true
    data_type: "TOD"
    data_path: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam800_noise0.1/tod_sim_16_s0.1_b800.h5"
    num_scans: 1799
    nside: 16
    bands:
      Planck30GHz:
        enabled: true
        fwhm: 800 # [arcmin]
        freq: 30 # [GHz]
  PlanckHFI:
    enabled: true
    data_type: "TOD"
    data_path: "/mn/stornext/d23/cmbco/jonas/c4_testing/com4_sim_data/sim_data_cmb_dust_sync_corrnoise_nside16_beam800_noise0.1/tod_sim_16_s0.1_b800.h5"
    num_scans: 1799
    nside: 16
    bands:
      Planck100GHz:
        enabled: true
        fwhm: 400 # [arcmin]
        freq: 100 # [GHz]